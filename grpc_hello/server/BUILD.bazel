load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

cc_binary(
    name = "hello_server_main",
    srcs = [
        "hello_server_main.cc",
    ],
    deps = [
        ":hello_server",
        "@com_github_gflags_gflags//:gflags",
        "@com_github_google_glog//:glog",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_grpc_grpc//:grpc++_reflection",
    ],
)

cc_library(
    name = "hello_server",
    srcs = [
        "hello_server.cc",
    ],
    hdrs = [
        "hello_server.h",
    ],
    deps = [
        "//grpc_hello/protos:grpc_hello_cc_grpc",
        "@com_github_google_glog//:glog",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_test(
    name = "hello_server_test",
    srcs = [
        "hello_server_test.cc",
    ],
    deps = [
        ":hello_server",
        "//grpc_hello/protos:grpc_hello_cc_grpc",
        "@com_github_grpc_grpc//:grpc++",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
    ],
)

pkg_tar(
    name = "hello_server_tar",
    srcs = [":hello_server_main"],
    package_dir = "/",
)

oci_image(
    name = "hello_server_image",
    base = "@distroless_cc",
    tars = [
        ":hello_server_tar",
    ],
)

oci_tarball(
    name = "hello_server_tarball",
    image = ":hello_server_image",
    repo_tags = ["hello_server:latest"],
)

py_binary(
    name = "hello_server_py_main",
    srcs = [
        "hello_server_py_main.py",
    ],
    python_version = "PY3",
    srcs_version = "PY2AND3",
    deps = [
        ":hello_server_py",
        "@com_github_grpc_grpc//src/python/grpcio/grpc:grpcio",
        "@io_abseil_py//absl:app",
        "@io_abseil_py//absl/flags",
        "@io_abseil_py//absl/logging",
    ],
)

py_library(
    name = "hello_server_py",
    srcs = [
        "hello_server_py.py",
    ],
    srcs_version = "PY2AND3",
    deps = [
        "//grpc_hello/protos:grpc_hello_py_grpc",
        "@com_github_grpc_grpc//src/python/grpcio/grpc:grpcio",
        "@io_abseil_py//absl/logging",
    ],
)
